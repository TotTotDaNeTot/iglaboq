from flask import Flask
from flask_cors import CORS
from database import db

import asyncio
import logging
import os



# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π event loop
loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)

app = Flask(__name__)
app.config['SECRET_KEY'] = os.getenv('ADMIN_SECRET_KEY')
CORS(app, resources={r"/*": {"origins": "*"}})



# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
try:
    loop.run_until_complete(db.connect())
    test = loop.run_until_complete(db.fetch_one("SELECT 1 AS test"))
    print("‚úÖ Database connection successful:", test)
except Exception as e:
    print(f"‚ùå Database connection failed: {e}")
    exit(1)



# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è run_async
def run_async(coro):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    return loop.run_until_complete(coro)


# –î–æ–±–∞–≤–ª—è–µ–º run_async –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.run_async = run_async

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º blueprint'—ã
from api.minio_routes import minio_bp
from api.journal_routes import journal_bp
from api.bot_routes import bot_bp

app.register_blueprint(minio_bp)
app.register_blueprint(journal_bp)
app.register_blueprint(bot_bp)



@app.route('/')
def home():
    return "API Server is running"



if __name__ == '__main__':
    try:
        print("üü¢ Starting server on http://localhost:5007")
        app.run(host='0.0.0.0', port=5007, debug=True)
    except Exception as e:
        print(f"‚ùå Server startup failed: {e}")
    finally:
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        try:
            loop.run_until_complete(db.close())
            print("‚úÖ Database connection closed")
        except Exception as e:
            print(f"‚ùå Error closing database: {e}")
            
            